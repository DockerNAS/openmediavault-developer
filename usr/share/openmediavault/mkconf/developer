#!/bin/sh
#
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2014 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

command=`echo $2 | cut -d \  -f 1`
plugin=`echo $2 | cut -d \  -f 2`
package="openmediavault-${plugin}"

sfref=$(omv_config_get "//services/developer/sharedfolderref")
sfpath=$(omv_get_sharedfolder_path "${sfref}")
temppath="/tmp/"
localepath="usr/share/openmediavault/locale"
txpath=".tx"

initial()
{
    if [ ! -d "${sfpath}${package}" ]; then
        echo "Cloning ${package} from github to ${sfpath} ..."
        cd ${sfpath}
        git clone https://github.com/OpenMediaVault-Plugin-Developers/${package}.git
    fi
}

build()
{
    echo "Building ${package}..."
    rm -f ${temppath}${package}*.deb
    rm -rf ${temppath}${package}
    cp -r ${sfpath}${package} ${temppath}
    cd ${temppath}${package}
    fakeroot debian/rules clean binary 2>&1
    rm -f ${sfpath}${package}*.deb
    cp -f ${temppath}${package}*.deb ${sfpath}
    rm -f ${temppath}${package}*.deb
    rm -rf ${temppath}${package}
    chmod 776 ${sfpath}*.deb
}

update()
{
    cd ${sfpath}${package}
    echo "Updating ${package} from github..."
    git pull
    git status
}

upload()
{
    remotehost=$(omv_config_get "//services/developer/remotehost")
    remotepath=$(omv_config_get "//services/developer/remotepath")
    port=$(omv_config_get "//services/developer/port")
    username=$(omv_config_get "//services/developer/username")
    password=$(omv_config_get "//services/developer/password")

    search="${sfpath}${package}_*"
    version=`ls ${search}`

    echo "Uploading ${version} to ${remotehost} ..."
    sshpass -p ${password} scp -P ${port} -o StrictHostKeyChecking=no "${version}" ${username}@${remotehost}:"${remotepath}"
}

tx()
{
    repos="/tmp/repos"
    tx_dir="${sfpath}.tx"
    tx_file="${tx_dir}/config"

    mkdir -p "${tx_dir}"

    cat <<EOF > ${tx_file}
[main]
host = https://www.transifex.com
lang_map = de: de_DE, it: it_IT, ru: ru_RU, uk: uk_UK, da: da_DA, no: no_NO, sv: sv_SV
type = PO

EOF

    # repos
    while read repo; do

    cat <<EOF >> ${tx_file}
[${repo}.${repo}pot]
file_filter = ${repo}/usr/share/openmediavault/locale/<lang>/${repo}.po
source_file = ${repo}/usr/share/openmediavault/locale/${repo}.pot
source_lang = en

EOF
    done < ${repos}

    rm -f ${repos}
}

moveto()
{
    rm -rf ${temppath}${package}
    rm -rf ${temppath}${txpath}
    cp -r ${sfpath}${package} ${temppath}
    cp -r ${sfpath}${txpath} ${temppath}
}

movefrom()
{
    cp -rf ${temppath}${package} ${sfpath}
    rm -rf ${temppath}${package}
    chmod 775 ${sfpath}${package}/${localepath}
}

buildpot()
{
    moveto
    cd ${temppath}${package}
    fakeroot debian/rules omv_build_pot 2>&1
    movefrom
}

pushpot()
{
    moveto
    cd ${temppath}${package}
    fakeroot debian/rules omv_push_pot 2>&1
    movefrom
}

pullpo()
{
    moveto
    cd ${temppath}${package}
    fakeroot debian/rules omv_pull_po 2>&1
    movefrom
}

case ${command} in
    update)
        initial
        update
    ;;

    build)
        initial
        build
    ;;

    upload)
        initial
        build
        upload
    ;;

    tx)
        tx
    ;;

    buildpot)
        initial
        buildpot
    ;;

    pushpot)
        initial
        pushpot
    ;;

    pullpo)
        initial
        pullpo
    ;;

    *)
    ;;
esac

exit 0
